// Copyright (c) 2021, The Monero Project
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, are
// permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this list of
//    conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice, this list
//    of conditions and the following disclaimer in the documentation and/or other
//    materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its contributors may be
//    used to endorse or promote products derived from this software without specific
//    prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
// THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

import "wallet_messages.proto";

package monero;

/**
 * Monero Wallet gRPC service
*/
service Wallet {
  // Return the wallet's balance.
  rpc getBalance(GetBalanceRequest) returns (GetBalanceResponse);
  // Get a stream of balance updates
  rpc subscribeBalanceUpdates(BalanceUpdateSubscription) returns (stream BalanceUpdate);

  // Get all accounts
  rpc getAccounts(GetAccountsRequest) returns (GetAccountsResponse);

  // Create new account
  rpc createAccount(CreateAccountRequest) returns (CreateAccountResponse);

  // Label account
  rpc labelAccount(LabelAccountRequest) returns (LabelAccountResponse);

  // Get wallet's addresses for each account. Optionally filter for specific accounts or subaddresses
  rpc getAddress(GetAddressRequest) returns (GetAddressResponse);

  // Create a new address for an account
  rpc createAddress(CreateAddressRequest) returns (CreateAddressResponse);

  // Label address
  rpc labelAddress(LabelAddressRequest) returns (LabelAddressResponse);

  // Validate an address
  rpc validateAddress(ValidateAddressRequest) returns (ValidateAddressResponse);

  // Send monero with interactive fee confirmation
  rpc interactiveTransfer(stream InteractiveTransferRequest) returns (stream InteractiveTransferResponse);

  // Send monero (fire-and-forget)
  rpc transfer(stream TransferRequest) returns (stream TransferResponse);

  // Returns a list of transfers
  rpc getTransfers(GetTransfersRequest) returns (GetTransfersResponse);

  // Subscribe to incoming payments
  rpc subscribeIncomingPayments(IncomingPaymentsSubscription) returns (stream IncomingPayment);

  // Subscribe to new blocks
  rpc subscribeNewBlocks(NewBlockSubscription) returns (stream NewBlock);
}
